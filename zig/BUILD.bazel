load("@bazel_skylib//:bzl_library.bzl", "bzl_library")
load("//zig/private:resolved_toolchain.bzl", "resolved_toolchain", "resolved_docs")
load("//zig/private:zig_binary.bzl", "zig_binary", "BINARY_KIND")

# For stardoc to reference the files
exports_files(
    [
        "defs.bzl",
        "extensions.bzl",
        "toolchain.bzl",
        "repositories.bzl",
    ],
    visibility = ["//docs:__pkg__"],
)

# This is the Zig compiler toolchain type. Zig rule authors should use this
# target in the `toolchains` parameter in order to access the appropriate Zig
# compiler for the current execution platform. Note, the target platform is
# handled separately via //zig/target:toolchain_type.
toolchain_type(
    name = "toolchain_type",
    visibility = ["//visibility:public"],
)

resolved_toolchain(
    name = "resolved_toolchain",
    # Marked manual so that `bazel test //...` passes
    # even if no toolchain is registered.
    tags = ["manual"],
    visibility = ["//visibility:public"],
)

resolved_docs(
    name = "resolved_docs",
    tags = ["manual"],
    visibility = ["//visibility:public"],
)

zig_binary(
    name = "docs.wasm",
    deps = [":resolved_docs"],
    kind = BINARY_KIND.exe,
    visibility = ["//visibility:public"],
)

# keep
bzl_library(
    name = "bazel_tools",
    srcs = ["@bazel_tools//tools:bzl_srcs"],
    visibility = ["//visibility:public"],
)

bzl_library(
    name = "repositories",
    srcs = ["repositories.bzl"],
    visibility = ["//visibility:public"],
    deps = [
        ":bazel_tools",
        "//zig/private:platforms",
        "//zig/private:versions",
        "//zig/private/common:zig_cache",
        "//zig/private/repo:toolchains_repo",
        "//zig/private/repo:zig_repository",
    ],
)

bzl_library(
    name = "defs",
    srcs = ["defs.bzl"],
    visibility = ["//visibility:public"],
    deps = [
        "//zig/private:zig_binary",
        "//zig/private:zig_configure",
        "//zig/private:zig_library",
        "//zig/private:zig_module",
        "//zig/private:zig_shared_library",
        "//zig/private:zig_test",
    ],
)

bzl_library(
    name = "toolchain",
    srcs = ["toolchain.bzl"],
    visibility = ["//visibility:public"],
    deps = [
        "//zig/private:zig_target_toolchain",
        "//zig/private:zig_toolchain",
    ],
)

bzl_library(
    name = "extensions",
    srcs = ["extensions.bzl"],
    visibility = ["//visibility:public"],
    deps = [
        ":repositories",
        "//zig/private/bzlmod:zig",
        "//zig/private/common:semver",
        "@bazel_skylib//lib:sets",
    ],
)

# Execute `bazel run //util:update_filegroups` to update this target.
filegroup(
    name = "all_files",
    srcs = [
        ":BUILD.bazel",
        ":defs.bzl",
        ":extensions.bzl",
        ":repositories.bzl",
        ":toolchain.bzl",
        "//zig/config:all_files",
        "//zig/lib:all_files",
        "//zig/platforms:all_files",
        "//zig/private:all_files",
        "//zig/runfiles:all_files",
        "//zig/settings:all_files",
        "//zig/target:all_files",
    ],
    visibility = ["//:__pkg__"],
)
